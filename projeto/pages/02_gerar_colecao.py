import streamlit as st
import pandas as pd
import json
from datetime import datetime

def main():
    st.set_page_config(
        page_title="Gerar Cole√ß√£o",
        page_icon="üìã",
        layout="wide"
    )
    
    st.title("üìã Gerar Cole√ß√£o")
    st.markdown("---")
    
    st.markdown("""
    ## Gera√ß√£o de Cole√ß√£o para Envio
    
    Configure os par√¢metros e gere a cole√ß√£o de dados para envio.
    """)
    
    # Verificar se h√° dados processados (simulado)
    if "dados_processados" not in st.session_state:
        st.warning("‚ö†Ô∏è Nenhum dado processado encontrado. V√° para a p√°gina 'Processar Dados' primeiro.")
        return
    
    col1, col2 = st.columns([2, 1])
    
    with col1:
        st.subheader("‚öôÔ∏è Configura√ß√µes da Cole√ß√£o")
        
        # Par√¢metros de configura√ß√£o
        nome_colecao = st.text_input(
            "Nome da Cole√ß√£o",
            value=f"Rateio_{datetime.now().strftime('%Y%m%d_%H%M')}"
        )
        
        descricao = st.text_area(
            "Descri√ß√£o",
            value="Cole√ß√£o de rateio gerada automaticamente"
        )
        
        # Filtros
        st.subheader("üîç Filtros")
        
        filtro_periodo = st.date_input(
            "Per√≠odo",
            value=datetime.now().date()
        )
        
        filtro_centro_custo = st.multiselect(
            "Centros de Custo",
            options=["CC001", "CC002", "CC003"],  # Seria carregado dos dados reais
            default=["CC001"]
        )
        
        incluir_inativos = st.checkbox("Incluir funcion√°rios inativos")
        
    with col2:
        st.subheader("üìä Resumo")
        
        # M√©tricas simuladas
        col_a, col_b = st.columns(2)
        with col_a:
            st.metric("Total de Registros", "150")
            st.metric("Centros de Custo", len(filtro_centro_custo))
        
        with col_b:
            st.metric("Valor Total", "R$ 45.678,90")
            st.metric("Funcion√°rios", "87")
    
    st.markdown("---")
    
    # Preview dos dados
    st.subheader("üëÄ Preview da Cole√ß√£o")
    
    # Dados simulados para preview
    preview_data = {
        "ID": [1, 2, 3, 4, 5],
        "Funcion√°rio": ["Jo√£o Silva", "Maria Santos", "Pedro Costa", "Ana Lima", "Carlos Oliveira"],
        "Centro de Custo": ["CC001", "CC001", "CC002", "CC002", "CC003"],
        "Valor": ["R$ 1.250,00", "R$ 950,00", "R$ 1.800,00", "R$ 1.100,00", "R$ 2.200,00"],
        "Status": ["Ativo", "Ativo", "Ativo", "Inativo", "Ativo"]
    }
    
    df_preview = pd.DataFrame(preview_data)
    st.dataframe(df_preview, use_container_width=True)
    
    st.markdown("---")
    
    # Bot√µes de a√ß√£o
    col1, col2, col3 = st.columns([1, 1, 1])
    
    with col1:
        if st.button("üíæ Salvar Cole√ß√£o", type="primary"):
            with st.spinner("Salvando cole√ß√£o..."):
                # Aqui seria implementada a l√≥gica de salvamento
                st.success("‚úÖ Cole√ß√£o salva com sucesso!")
    
    with col2:
        if st.button("üì§ Exportar JSON"):
            # Criar dados para exporta√ß√£o
            export_data = {
                "nome": nome_colecao,
                "descricao": descricao,
                "data_geracao": datetime.now().isoformat(),
                "filtros": {
                    "periodo": str(filtro_periodo),
                    "centros_custo": filtro_centro_custo,
                    "incluir_inativos": incluir_inativos
                },
                "dados": preview_data
            }
            
            st.download_button(
                label="‚¨áÔ∏è Download JSON",
                data=json.dumps(export_data, indent=2, ensure_ascii=False),
                file_name=f"{nome_colecao}.json",
                mime="application/json"
            )
    
    with col3:
        if st.button("üìß Enviar Cole√ß√£o"):
            with st.spinner("Enviando cole√ß√£o..."):
                # Aqui seria implementada a l√≥gica de envio
                st.success("‚úÖ Cole√ß√£o enviada com sucesso!")
                st.balloons()
    
    st.markdown("---")
    st.info("üí° **Dica:** Verifique sempre o preview antes de enviar a cole√ß√£o.")

if __name__ == "__main__":
    main()